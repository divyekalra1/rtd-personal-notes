##########################################
Penetration Testing Process Overview
##########################################

.. image:: b1e67cbf11cd1c7ec043f4c93423d08b.png
   :alt: Pre-Engagement

1. **Pre-Engagement**
   The process where essential documents, scope, tasks, limitations and agreements are documented **IN WRITING**. Contracts and essential information needed for pentesters and the client are drawn up, such as:

   1. Non-Disclosure Agreement
   2. Goals
   3. Scope
   4. Time Estimation
   5. Rules of Engagement

   Before any of the vital information can be discussed or meetings held, an NDA has to be signed by all parties.

   **Keep track of WHO's authorized to contract us for a penetration test.**  
   Usually, it's either the CEO, CSO, CISO or VP of Internal Audit, etc.  
   Also, keep a track of primary/secondary points of contact for escalating any issues.

Pre-Engagement Process - Stages Involved
========================================

Now, let's talk about the stages involved in the Pre-Engagement Process:

.. list-table:: Pre-Engagement Stages
   :header-rows: 1

   * - Pre-Engagement Stages
   * - Scoping questionnaire
   * - Pre-engagement meeting
   * - Kick-off meeting

Before we begin, here is a list of documents to be prepared as part of the pre-engagement process:

.. list-table:: Non-Disclosure Agreement and Related Documents
   :widths: 40 60
   :header-rows: 1

   * - Document
     - Timing for Creation
   * - Non-Disclosure Agreement (NDA)
     - After Initial Contact
   * - Scoping Questionnaire
     - Before the Pre-Engagement Meeting
   * - Scoping Document
     - During the Pre-Engagement Meeting
   * - Penetration Testing Proposal (or Contract/Scope of Work (SoW))
     - During the Pre-Engagement Meeting
   * - Rules of Engagement (RoE)
     - Before the Kick-Off Meeting
   * - Contractors Agreement (Physical Assessments)
     - Before the Kick-Off Meeting
   * - Reports
     - During and after the conducted Penetration Test


2. Information Gathering
========================

Identifying targets (can be a list of IP addresses/network ranges or only a domain name). Using the information collected to look for any weaknesses. Using automated scanning tools like nmap, nessus, etc. to find known vulnerabilities and manual analysis.

**Before attempting to exploit anything, we should have completed thorough information gathering. Organization and patience are vital while being as thorough as possible.**

This stage can be divided into 5 categories:

.. list-table:: Information Gathering Categories
   :widths: 25 75
   :header-rows: 1

   * - Category
     - Description
   * - Open-Source Intelligence
     - Finding the target company's publicly available sensitive information (API keys, passwords, tokens, etc.).
   * - Infrastructure Enumeration
     - Gaining an overview of the infrastructure (external or internal), e.g. using DNS to map servers and hosts.
   * - Service Enumeration
     - Identify services that allow interaction with hosts or servers. Find vulnerabilities in old versions, misconfigurations, etc.
   * - Host Enumeration
     - Identify which OS and which services (plus versions) are present. Internal services may have hidden vulnerabilities.
   * - Pillaging
     - Extracting sensitive data from a system after post-exploitation access.

3. Vulnerability Assessment
====================================================

Divided into two stages:
   1. Scan for known vulnerabilities
   2. Analyze found vulnerabilities -- privilege escalation, workflow manipulation, etc.

There are 4 types of vulnerability analysis:

.. list-table:: Vulnerability Assessment Types
   :widths: 20 80
   :header-rows: 1

   * - Analysis Type
     - Description
   * - Descriptive
     - Summarizes a dataset's key features, helping spot errors or anomalies.
   * - Diagnostic
     - Digs into *why* things happened. Looks back for reasons and connections behind events.
   * - Predictive
     - Forecasts future probabilities, spotting trends and likely outcomes from current & past data.
   * - Prescriptive
     - Recommends specific actions to prevent issues or achieve results.

Understanding with an example
-----------------------------

Suppose we found an open TCP port 2121 on a host during the information gathering phase.

Other than the fact that this port is open, Nmap did not show us anything else. We must now ask ourselves what conclusions can be drawn from this result. Therefore, it does not matter which question we start with to make our conclusions. However, it is essential to ask precise questions and remember what we know and do not know. At this point, we must first ask ourselves what we see and what we actually have, because what we see is not the same as what we have:

- TCP port 2121. TCP means this service is connection-oriented.
- Is this a standard port? No; standard (well-known/system) ports are 0-1023.
- Are there any familiar numbers in this port? Yes, TCP port 21 (FTP). Admins often use "easy to remember" alternatives.
- Try to connect to the service using Netcat or an FTP client to confirm or disprove.
- If connection takes longer than usual (e.g. 15s), it may have configured delays. Use Nmap with ``--min-rtt-timeout=15s``.
- Confirming an FTP server is running on this port may explain a failed scan.

Websites that publish CVEs and PoCs:
    1. `CVEdetails <https://www.cvedetails.com/>`_
    2. `Exploit DB <https://www.exploit-db.com/>`_
    3. `Vulners <https://vulners.com/>`_
    4. `Packet Storm Security <https://packetstormsecurity.com/>`_
    5. `NIST <https://nvd.nist.gov/vuln/search?execution=e2s1>`_

**It is important to note that these two stages (Information Gathering and Vulnerability Assessment) often overlap, resulting in regular back and forth movement between them.**

4. Exploitation
===============

This is the stage where we look for ways to achieve our goal (escalated privileges, reverse shell, etc.) using found vulnerabilities.

Exploitation is divided into two AREAS:
   1. Network exploitation—Overview of the network, open ports/services, misconfigurations, leverage public vulns.
   2. Web exploitation—Web application attack surfaces, SQLi, LFI/RFI, etc., differences in DB syntax.

Attack preparation
------------------

- **No Good Exploit? Rebuild & Test Locally:**
  - If a working PoC exploit is missing, recreate the target environment locally (VM).
  - Mirror target components.
  - Adapt/test the exploit locally.
- **Familiar Vulns:**
  - For common issues, you'll know the right tool/exploit and its stability.
- **Communicate When in Doubt!**
  - Check with the client before risky attacks.
  - Provide all data for informed decisions.
  - If no exploitation, note in report: "not actively confirmed, but likely an issue."
  - Extra communication is better than downtime.
- **Post-Successful Exploit:**
  - Take clear notes, log activities.
  - Move to post-exploitation and lateral movement.


CVSS Scoring: `https://nvd.nist.gov/vuln-metrics/cvss` (for assessing vulnerability severity)

.. list-table:: CVSS Severity
   :widths: 30 70
   :header-rows: 1

   * - Severity
     - Severity Score Range
   * - None
     - 0.0
   * - Low
     - 0.1-3.9
   * - Medium
     - 4.0-6.9
   * - High
     - 7.0-8.9
   * - Critical
     - 9.0-10.0


NVD Calculator: `https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator`

5. Post-Exploitation
====================

In most cases, exploiting services does not grant the highest privileges. **This stage is to bypass restrictions and gain privileges.**  
With gained privileges, repeat information gathering or move laterally/exploit other services.  
May involve:

- Evasive Testing (e.g. commands monitored by EDR: ``net user``, ``whoami``; types: Evasive, Hybrid Evasive, Non-Evasive)
- Information Gathering
- Pillaging (examine host’s network role)
- Vulnerability Assessment
- Privilege Escalation
- Persistence
- Data Exfiltration

  - When testing exfiltration, remember DLP, EDR, encryption are common defenses.
  - **CRITICAL:** Always get client and manager approval before exfiltrating any sensitive data.
  - **Safer Bet:** Use bogus data (fake credit cards, etc.) to test.
  - If using fake data, confirm with client if systems should detect that type.
  - **Evidence is key:** Use screen recordings and screenshots for vital steps.
  - If terminal-only: capture hostname, IP, user, and file path to prove access.
  - **If you exfiltrate sensitive data:** Notify client immediately. They may pause, end, or shift the test, but it's their call.

**Pillaging is about extracting info from the compromised system, learning about its connections, and is different from unauthorized data exfiltration.**

6. Lateral Movement
===================

(Section intentionally left as a heading, as in original MD.)

7. Proof-of-Concept
===================

(Section intentionally left as a heading, as in original MD.)

8. Post-Engagement
==================

(Section intentionally left as a heading, as in original MD.)

Summary: https://academy.hackthebox.com/module/90/section/936

::

   Gather info
   ↓
   assess vulnerability and gain access to target system -> if access is not the highest, get highest access first
   ↓

***

**ALWAYS REMEMBER:** do your due diligence BEFORE asking for help. Try to come up with a partial solution first. Before asking a question, list out what you already know and what things you have already tried. In doing this, you may find the answer is right in front of you.

**A pentest is not monitoring the IT infrastructure or systems but a momentary snapshot of the security status**

***

Penetration Testing Methods
===========================

1. **External** — Performed from outside, as an anonymous user on the Internet.  
   Conducted from own host or VPS, possibly using VPN for stealth. Client may request "stealthy" or "hybrid" approaches.

   *Goal*: Access external-facing hosts, obtain sensitive data, or gain access to the internal network.

2. **Internal** — Performed from within the corporate network.  
   Can start from an assumed breach or after accessing from an external test.

.. list-table:: Penetration Testing Types
   :widths: 20 80
   :header-rows: 1

   * - Type
     - Information Provided
   * - Blackbox
     - Minimal. Only essentials, such as IPs and domains.
   * - Greybox
     - Extended. Additional info such as URLs, hostnames, subnets, etc.
   * - Whitebox
     - Maximum. Full internal view, possibly including source code, admin credentials, configs, etc.
   * - Red-Teaming
     - May include physical testing and social engineering, can be combined with above types.
   * - Purple-Teaming
     - Focuses on working closely with defenders; can be combined with other types.